
DCL:
*grant	
	*allows specific users to access

SYNTAX:
grant privilege_name on object_name
to {user_name | public | role_name} 

*revoke:
	*withdraw user privileges on database objects if any granted.

SYNTAX:
revoke privilege_name on object_name
from {user_name | public | role_name}

--------------------------------------------------------------------------------------

NoSQL:
* No Structured Query Language
*files are stored in JSON(JavaScript Object Notation) format

EX:
*mongodb
* Cassandra,
* Redis

-------------------------------------------------------------------------------------------

Database Designing:
*it is a process of creating detailed data model of a database
*it involves structuring data logically and efficiently

-----------------------------------------------------------------------------------

Key Concepts in DBMS:

*Requirment Analysis
*Conceptual design(ER Diagram)\
*Logical design(diagram converts into sql table)
*Normalisation-used to avoid duplications.(meter-1nf,2nf,3nf)
*Physical Design

Normalisation Main Purpose:
*Data Integration
*Reduce duplication
*Increase Security
*Scalability

Definition of  Normalisation:
*It is a process of organising data in a database

1nf:
Rules:
*)Each column should contain Atomic Values
*)No repeating groups 

2nf:
Rules:
*should meet the requirements of 1nf
*No partial dependency

3nf:
Rules:
*should meet the requirements of 2nf
*no transitive dependcy

-------------------------------------------------------------------------------------
MySQL Clauses:
*where
EX:
select * from table_name where column_name=value;

*use column_name instead of * to get a particular value.*refers to everything

*order by
EX:
Ascending Order:
select * from table_name order by column_name;

Descending Order:
select * from table_name order by column_name desc;

*limit
select * from table_name limit (number);

*offset
*to view the balance or ignore the top datas

SYNTAX:
select * from table_name limit (value) offset (value);

*distinct
*ignore the duplications

SYNTAX:
select distinct column_name from table_name;
